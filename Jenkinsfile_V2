node{
  def dockerHubId = 'aruneshpd'
  stage('Git Checkout'){
      git url: 'https://github.com/javahometech/my-app', branch:'master'
  }
  stage('MVN Package'){
      def mvnHome = tool name: 'Maven', type: 'maven'
      sh "${mvnHome}/bin/mvn clean package"
  }
  stage('Build Docker Image from Dockerfile'){
    sh "docker image build -t ${dockerHubId}/$JOB_NAME:v1.$BUILD_ID ."
  }
  stage('Upload Image to DockerHub'){
    withCredentials([string(credentialsId: 'dockerHub-cred', variable: 'dockerHubPswd')]){
        sh "docker login -u aruneshpd -p ${dockerHubPswd}"
    }
    sh "docker push ${dockerHubId}/$JOB_NAME:v1.$BUILD_ID"
  }
  stage('Removing Old Containers'){
    sshagent(['deploy_server']) {
      try{
        def sshCmd = 'ssh -o StrictHostKeyChecking=no ec2-user@172.31.36.147'
        def dockerRM = 'docker rm -f my-app'
        sh "${sshCmd} ${dockerRM}"
      }catch(error){

      }
    }
  }
  stage('Deploy to deploy_server'){
    sshagent(['deploy_server']) {
        def sshCmd = 'ssh -o StrictHostKeyChecking=no ec2-user@172.31.36.147'
        def dockerRun = "docker container run -d -p 8080:8080 --name my-app ${dockerHubId}/$JOB_NAME:v1.$BUILD_ID"
        sh "${sshCmd} ${dockerRun}"
    }
  }
}